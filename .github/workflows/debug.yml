name: CI
env:
  DEBUG: napi:*
  RUST_BACKTRACE: full
  APP_NAME: source-code-diagnosis
  MACOSX_DEPLOYMENT_TARGET: '10.13'
permissions:
  contents: write
  id-token: write
on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]
    
jobs:
  build-artifacts:
    strategy:
      fail-fast: false
      matrix:
        settings:

          # macos
          - host: macos-13
            target: x86_64-apple-darwin
          - host: macos-14
            target: aarch64-apple-darwin

          # windows
          - host: windows-2022
            target: x86_64-pc-windows-msvc
          - host: windows-2022
            target: i686-pc-windows-msvc

          # linux
          - host: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
          - host: ubuntu-24.04
            target: x86_64-unknown-linux-musl

          - host: ubuntu-24.04
            target: i686-unknown-linux-gnu
          - host: ubuntu-24.04
            target: i686-unknown-linux-musl

          - host: ubuntu-24.04
            target: aarch64-unknown-linux-gnu
          - host: ubuntu-24.04
            target: aarch64-unknown-linux-musl


    name: Build artifacts ${{ matrix.settings.target }} on ${{ matrix.settings.host }}
    runs-on: ${{ matrix.settings.host }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'pnpm' 
      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          override: true
          target: ${{ matrix.settings.target }}
          components: rustfmt
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies 
      - name: Build artifacts
        run: |
            rustup target add ${{ matrix.settings.target }}
            pnpm build --target ${{ matrix.settings.target }} 
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.settings.target }}
          path: ${{ env.APP_NAME }}.*.node
          if-no-files-found: error
      - name: Upload Javascript artifact
        uses: actions/upload-artifact@v4
        with:
            name: js
            path: |
              index.js
              index.d.ts
            overwrite: true

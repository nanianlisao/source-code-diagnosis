name: dev
env:
  DEBUG: napi:*
  RUST_BACKTRACE: full
  APP_NAME: source-code-diagnosis
  MACOSX_DEPLOYMENT_TARGET: '10.13'
permissions:
  contents: write
  id-token: write
on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:

  cargo-test:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-13
            target: x86_64-apple-darwin
          - host: macos-14
            target: aarch64-apple-darwin

          - host: windows-2022
            target: x86_64-pc-windows-msvc
          - host: windows-2022
            target: i686-pc-windows-msvc
          - host: windows-2022
            target: aarch64-pc-windows-msvc

          - host: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
          - host: ubuntu-24.04
            target: x86_64-unknown-linux-musl

          # - host: ubuntu-24.04
          #   target: i686-unknown-linux-gnu
          # - host: ubuntu-24.04
          #   target: i686-unknown-linux-musl

          - host: ubuntu-24.04
            target: aarch64-unknown-linux-gnu
          - host: ubuntu-24.04
            target: armv7-unknown-linux-gnueabihf
          - host: ubuntu-24.04
            target: aarch64-unknown-linux-musl
          - host: ubuntu-24.04
            target: armv7-unknown-linux-musleabihf
          - host: ubuntu-24.04
            target: arm-linux-androideabi
          - host: ubuntu-24.04
            target: aarch64-linux-android

    name: Cargo test artifacts ${{ matrix.settings.target }} on ${{ matrix.settings.host }}
    runs-on: ${{ matrix.settings.host }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          override: true
          target: ${{ matrix.settings.target }}
          components: rustfmt

      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.settings.target }} 

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}

      - name: Cargo test
        run: cargo test

  build-artifacts:
    # needs:
    #   - cargo-test
    strategy:
      fail-fast: false
      matrix:
        settings:

          # macos
          - host: macos-13
            target: x86_64-apple-darwin
          - host: macos-14
            target: aarch64-apple-darwin

          # windows
          - host: windows-2022
            target: x86_64-pc-windows-msvc
          - host: windows-2022
            target: i686-pc-windows-msvc
          - host: windows-2022
            target: aarch64-pc-windows-msvc

          # linux
          - host: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
          - host: ubuntu-24.04
            target: x86_64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
          - host: ubuntu-24.04
            target: x86_64-unknown-freebsd
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian

          # - host: ubuntu-24.04
          #   target: i686-unknown-linux-gnu
          # - host: ubuntu-24.04
          #   target: i686-unknown-linux-musl

          - host: ubuntu-24.04
            target: aarch64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian-aarch64
          - host: ubuntu-24.04
            target: armv7-unknown-linux-gnueabihf
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian-aarch64
          - host: ubuntu-24.04
            target: aarch64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
          - host: ubuntu-24.04
            target: armv7-unknown-linux-musleabihf
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine


    name: Build artifacts ${{ matrix.settings.target }} on ${{ matrix.settings.host }}
    runs-on: ${{ matrix.settings.host }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'pnpm' 

      - name: Setup toolchain
        uses: actions-rs/toolchain@v1
        with:
          override: true
          target: ${{ matrix.settings.target }}
          components: rustfmt

      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.settings.target }} 

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies 

      - name: Build artifacts
        if: ${{ !matrix.settings.docker }}
        run: |
            pnpm build --target ${{ matrix.settings.target }} 

      - name: Build in docker
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: '--user 0:0 -v ${{ github.workspace }}/.cargo-cache/git/db:/usr/local/cargo/git/db -v ${{ github.workspace }}/.cargo/registry/cache:/usr/local/cargo/registry/cache -v ${{ github.workspace }}/.cargo/registry/index:/usr/local/cargo/registry/index -v ${{ github.workspace }}:/build -w /build'
          run: pnpm build --target ${{ matrix.settings.target }} 

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.settings.target }}
          path: ${{ env.APP_NAME }}.*.node
          if-no-files-found: error

  test-artifacts:
    needs:
      - build-artifacts
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-13
            target: x86_64-apple-darwin
          - host: macos-14
            target: aarch64-apple-darwin

          - host: windows-2022
            target: x86_64-pc-windows-msvc
          - host: windows-2022
            target: i686-pc-windows-msvc
          - host: windows-2022
            target: aarch64-pc-windows-msvc

          - host: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
          - host: ubuntu-24.04
            target: x86_64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
          - host: ubuntu-24.04
            target: x86_64-unknown-freebsd
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
          # - host: ubuntu-24.04
          #   target: i686-unknown-linux-gnu
          # - host: ubuntu-24.04
          #   target: i686-unknown-linux-musl

          - host: ubuntu-24.04
            target: aarch64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian-aarch64
          - host: ubuntu-24.04
            target: armv7-unknown-linux-gnueabihf
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian-aarch64
          - host: ubuntu-24.04
            target: aarch64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
          - host: ubuntu-24.04
            target: armv7-unknown-linux-musleabihf
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine

        node:
          - '18'
          - '20'

    name: Test artifacts ${{ matrix.settings.target }} on ${{ matrix.settings.host }}
    runs-on: ${{ matrix.settings.host }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm' 

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: bindings-${{ matrix.settings.target }}
          path: .

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies 

      - name: Build js
        run: pnpm build:js

      - name: Test
        run: pnpm test
 
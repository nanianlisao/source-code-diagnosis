const keywords = [
	"classes",
	"constructor",
	"extends",
	"private_class_fields",
	"private_class_fields_in",
	"private_class_methods",
	"public_class_fields",
	"static",
	"static_class_fields",
	"static_initialization_blocks",
	"functions",
	"arguments",
	"arguments_callee",
	"arguments_length",
	"arguments_@@iterator",
	"arrow_functions",
	"arrow_functions_trailing_comma",
	"block_level_functions",
	"default_parameters",
	"destructured_parameter_with_default_value_assignment",
	"parameters_without_defaults_after_default_parameters",
	"get",
	"get_computed_property_names",
	"method_definitions",
	"method_definitions_async_generator_methods",
	"method_definitions_async_methods",
	"method_definitions_generator_methods_not_constructable",
	"rest_parameters",
	"rest_parameters_destructuring",
	"set",
	"set_computed_property_names",
	"array_literals",
	"binary_numeric_literals",
	"boolean_literals",
	"decimal_numeric_literals",
	"hashbang_comments",
	"hexadecimal_escape_sequences",
	"hexadecimal_numeric_literals",
	"null_literal",
	"numeric_separators",
	"octal_numeric_literals",
	"regular_expression_literals",
	"string_literals",
	"unicode_escape_sequences",
	"unicode_point_escapes",
	"shorthand_object_literals",
	"template_literals",
	"template_literals_template_literal_revision",
	"trailing_commas",
	"trailing_commas_in_dynamic_import",
	"trailing_commas_in_functions",
	"trailing_commas_in_object_literals",
	"expressions_backreference",
	"expressions_capturing_group",
	"expressions_character_class",
	"expressions_character_class_escape",
	"expressions_character_escape",
	"expressions_character_escape_unicode",
	"expressions_disjunction",
	"expressions_input_boundary_assertion",
	"expressions_literal_character",
	"expressions_lookahead_assertion",
	"expressions_lookbehind_assertion",
	"expressions_modifier",
	"expressions_named_backreference",
	"expressions_named_capturing_group",
	"expressions_named_capturing_group_duplicate_named_capturing_groups",
	"expressions_non_capturing_group",
	"expressions_quantifier",
	"expressions_unicode_character_class_escape",
	"expressions_wildcard",
	"expressions_word_boundary_assertion",
	"async_function",
	"async_generator_function",
	"block",
	"break",
	"class",
	"const",
	"continue",
	"debugger",
	"do_while",
	"empty",
	"export",
	"export_default",
	"export_namespace",
	"for",
	"for_await_of",
	"for_in",
	"for_of",
	"for_of_async_iterators",
	"for_of_closing_iterators",
	"function",
	"function_trailing_comma_in_parameters",
	"generator_function",
	"generator_function_IteratorResult_object",
	"generator_function_not_constructable_with_new",
	"generator_function_trailing_comma_in_parameters",
	"if_else",
	"import",
	"import_worker_support",
	"import_import_assertions",
	"import_import_assertions_type_css",
	"import_import_assertions_type_json",
	"import_import_attributes",
	"import_import_attributes_type_css",
	"import_import_attributes_type_json",
	"import_service_worker_support",
	"import_worklet_support",
	"label",
	"let",
	"return",
	"switch",
	"throw",
	"try_catch",
	"try_catch_optional_catch_binding",
	"var",
	"while",
	"with",
	"addition",
	"addition_assignment",
	"assignment",
	"async_function",
	"async_generator_function",
	"await",
	"await_top_level",
	"bitwise_and",
	"bitwise_and_assignment",
	"bitwise_not",
	"bitwise_or",
	"bitwise_or_assignment",
	"bitwise_xor",
	"bitwise_xor_assignment",
	"class",
	"comma",
	"conditional",
	"decrement",
	"delete",
	"destructuring",
	"destructuring_computed_property_names",
	"destructuring_rest_in_arrays",
	"destructuring_rest_in_objects",
	"division",
	"division_assignment",
	"equality",
	"exponentiation",
	"exponentiation_assignment",
	"function",
	"function_trailing_comma",
	"generator_function",
	"generator_function_trailing_comma",
	"greater_than",
	"greater_than_or_equal",
	"grouping",
	"import",
	"import_worker_support",
	"import_options_parameter",
	"import_meta",
	"import_meta_resolve",
	"in",
	"increment",
	"inequality",
	"instanceof",
	"left_shift",
	"left_shift_assignment",
	"less_than",
	"less_than_or_equal",
	"logical_and",
	"logical_and_assignment",
	"logical_not",
	"logical_or",
	"logical_or_assignment",
	"multiplication",
	"multiplication_assignment",
	"new",
	"new_target",
	"null",
	"nullish_coalescing",
	"nullish_coalescing_assignment",
	"object_initializer",
	"object_initializer_computed_property_names",
	"object_initializer_shorthand_method_names",
	"object_initializer_shorthand_property_names",
	"object_initializer_spread_properties",
	"optional_chaining",
	"property_accessors",
	"remainder",
	"remainder_assignment",
	"right_shift",
	"right_shift_assignment",
	"spread",
	"spread_spread_in_arrays",
	"spread_spread_in_function_calls",
	"spread_spread_in_object_literals",
	"strict_equality",
	"strict_inequality",
	"subtraction",
	"subtraction_assignment",
	"super",
	"this",
	"typeof",
	"unary_negation",
	"unary_plus",
	"unsigned_right_shift",
	"unsigned_right_shift_assignment",
	"void",
	"yield",
	"yield_star",
];

const countDuplicates = (arr) => {
	const counts = {};
	arr.forEach((value) => {
		counts[value] = (counts[value] || 0) + 1;
	});
	return counts;
};

const result = countDuplicates(keywords);

for (const key in result) {
	if (result[key] > 1) {
		console.log(key, result[key]);
	}
}

// console.log(result);
